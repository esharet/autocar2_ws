<?xml version="1.0"?>


<robot xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:property name="M_PI" value="3.14159" />
  <material name="blue">
    <color rgba="0 0 .7 1" />
  </material>

  <link name="pod">
    <visual>
      <origin xyz="0 0 0.0" rpy="0 0 0" />
      <geometry>
        <box size="0.4 0.2 0.1" />
      </geometry>
      <material name="blue" />
    </visual>
    <collision>
      <geometry>
        <box size="0.4 0.2 0.1" />
      </geometry>
    </collision>

    <inertial>
      <mass value="0.1" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001" />
    </inertial>
  </link>
  <gazebo reference="pod">
    <material>Gazebo/Blue</material>
  </gazebo>
  <joint name="pod_joint" type="fixed">
    <parent link="body_link" />
    <child link="pod" />
    <origin xyz="0 0 0.05" rpy="0 0 0" />
  </joint>


  <xacro:macro name="dcam" params="suffix xyz rpy">
    <link name="depth_cam_link_${suffix}">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="0.018 0.109  0.024" />
        </geometry>
        <material name="blue" />
      </visual>
      <inertial>
        <mass value="0.1" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001" />
      </inertial>
    </link>
    <joint name="depth_cam_joint_${suffix}" type="fixed">
      <parent link="pod" />
      <child link="depth_cam_link_${suffix}" />
      <origin xyz="${xyz}" rpy="${rpy}" />
    </joint>
    <link name="depth_cam_dummy_link_${suffix}">
      <empty></empty>
    </link>
    <joint name="depth_cam_dummy_joint_${suffix}" type="fixed">
      <parent link="depth_cam_link_${suffix}" />
      <child link="depth_cam_dummy_link_${suffix}" />
      <origin xyz="0 0 0.0" rpy=" ${-M_PI/2}  0.0 ${-M_PI/2}" />
    </joint>

    <gazebo reference="depth_cam_link_${suffix}">
      <material>Gazebo/Blue</material>
      <sensor name="depth_cam_sensor_${suffix}" type="depth">
        <update_rate>10</update_rate>
        <camera>
          <name>depth_${suffix}</name>
          <horizontal_fov>${59*M_PI/180}</horizontal_fov>
          <vertical_fov>${46*M_PI/180}</vertical_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.03</near>
            <far>5.0</far>
          </clip>
        </camera>

        <plugin name="depth_camera_controller" filename="libgazebo_ros_openni_kinect.so">
          <baseline>0.2</baseline>
          <alwaysOn>true</alwaysOn>
          <updateRate>10</updateRate> 
          <cameraName>depth_${suffix}</cameraName>
          <imageTopicName>/depth_${suffix}/color/image_raw</imageTopicName>
          <cameraInfoTopicName>/depth_${suffix}/color/camera_info</cameraInfoTopicName>
          <depthImageTopicName>/depth_${suffix}/depth/image_raw</depthImageTopicName>
          <depthImageInfoTopicName>/depth_${suffix}/depth/camera_info</depthImageInfoTopicName>
          <pointCloudTopicName>/depth_${suffix}/depth/points</pointCloudTopicName>
          <frameName>depth_cam_dummy_link_${suffix}</frameName>
          <pointCloudCutoff>0.3</pointCloudCutoff>
          <pointCloudCutoffMax>5.0</pointCloudCutoffMax>
          <distortionK1>0.00000001</distortionK1>
          <distortionK2>0.00000001</distortionK2>
          <distortionK3>0.00000001</distortionK3>
          <distortionT1>0.00000001</distortionT1>
          <distortionT2>0.00000001</distortionT2>
          <CxPrime>0</CxPrime>
          <Cx>0</Cx>
          <Cy>0</Cy>
          <focalLength>0</focalLength>
          <hackBaseline>0</hackBaseline>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>
  <xacro:dcam suffix="right" xyz="0.3 -0.12 0.07" rpy="0 0 ${-59*M_PI/180}" />
  <xacro:dcam suffix="left" xyz="0.3 0.12 0.07" rpy="0 0 ${59*M_PI/180}" />
  <xacro:dcam suffix="front" xyz="0.3 0.0 0.02" rpy="0 0 ${0}" />
  <xacro:dcam suffix="rear" xyz="-0.3 0.0 0.02" rpy="0 0 ${M_PI}" />


  <xacro:macro name="cam" params="suffix xyz rpy">
    <link name="camera_${suffix}">
      <visual>
        <origin xyz="0 0 0.0" rpy="0 0 0" />
        <geometry>
          <box size="0.01 0.04 0.04" />
        </geometry>
        <material name="blue" />
      </visual>
      <collision>
        <geometry>
          <box size="0.01 0.04 0.04" />
        </geometry>
      </collision>

      <inertial>
        <mass value="0.01" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001" />
      </inertial>
    </link>

    <gazebo reference="camera_${suffix}">
      <material>Gazebo/Blue</material>
      <sensor name="camera_${suffix}_sensor" type="camera">
        <!-- <pose>-3 -1 1.4 0 0.37 0</pose> -->
        <camera>
          <horizontal_fov>1.5</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
          </image>
          <clip>
            <near>0.1</near>
            <far>1000</far>
          </clip>
        </camera>
        <always_on></always_on>
        <update_rate>10</update_rate>
        <visualize>false</visualize>
        <!-- <format>L8</format> -->

        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>camera_${suffix}</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>camera_${suffix}</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
    </gazebo>

    <joint name="cam_joint_${suffix}" type="fixed">
      <parent link="pod" />
      <child link="camera_${suffix}" />
      <origin xyz="${xyz}" rpy="${rpy}" />
    </joint>
  </xacro:macro>
  <xacro:cam suffix="right" xyz="-0.1 -0.12 0.05" rpy="0 0 ${-M_PI/5}" />
  <xacro:cam suffix="left" xyz="-0.1 0.12 0.05" rpy="0 0 ${M_PI/5}" />
  <xacro:cam suffix="front" xyz="0.3 0.0 0.0" rpy="0 0 ${0}" />
  <xacro:cam suffix="rear" xyz="-0.3 0.0 0.0" rpy="0 0 ${M_PI}" />


  <!--_LIDAR -->
  <gazebo reference="laser">
    <material>Gazebo/FlatBlack</material>
    <sensor type="ray" name="lds_lfcd_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>15</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>0.0</min_angle>
            <max_angle>6.28319</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.120</min>
          <max>10.0</max>
          <resolution>0.050</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_lds_lfcd_controller" filename="libgazebo_ros_laser.so">
        <topicName>scan</topicName>
        <frameName>laser</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <joint name="scan_joint" type="fixed">
    <parent link="pod" />
    <child link="laser" />
    <origin xyz="0 0 0.15" rpy="0 0 3.14" />
  </joint>

  <link name="laser">
    <visual>
      <origin xyz="0 0 0.0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://warehouse_simulation/meshes/lds.stl" scale="0.001 0.001 0.001" />
      </geometry>
      <material name="blue" />
    </visual>

    <collision>
      <origin xyz="0.015 0 -0.0065" rpy="0 0 0" />
      <geometry>
        <cylinder length="0.0315" radius="0.055" />
      </geometry>
    </collision>

    <inertial>
      <mass value="0.114" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001" />
    </inertial>
  </link>

  <xacro:arg name="gpu" default="false" />
  <xacro:property name="gpu" value="$(arg gpu)" />
  <xacro:arg name="organize_cloud" default="false" />
  <xacro:property name="organize_cloud" value="$(arg organize_cloud)" />

  <xacro:include filename="$(find velodyne_description)/urdf/VLP-16.urdf.xacro" />
  <xacro:VLP-16 parent="pod" name="velodyne" topic="/velodyne_points" organize_cloud="${organize_cloud}" hz="10" samples="440" gpu="${gpu}">
    <origin xyz="0 0 0.05" rpy="0 0 0" />
  </xacro:VLP-16>


</robot>